/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'com.gustavsvensk.ordfyran'
version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'ch.qos.logback:logback-classic:1.5.12'
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = project.group
            artifactId = 'dictionary'
            version = project.version

            pom {
                name = 'Ordfyran Dictionary'
                description = 'Contains Swedish Dictionary.'
                licenses {
                    license {
                        name = 'Creative Commons Attribution-ShareAlike, version 2.5'
                        url = 'https://creativecommons.org/licenses/by-sa/2.5/legalcode.en'
                    }
                }
                developers {
                    developer {
                        id = 'GSvensk'
                        name = 'Gustav Svensk'
                        email = 'me@gustavsvensk.com'
                    }
                }
                scm {
                    connection = 'https://github.com/GSvensk/ordfyran-dictionary.git'
                    url = 'https://github.com/GSvensk/ordfyran-dictionary'
                }
            }
        }
    }

    repositories {
        mavenLocal()
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Set the encoding if needed
}
